@model IEnumerable<TickTaskDoe.Models.ToDoTask>

<style>
    #TaskEditDeleteLinks {
        text-align: center;
    }

    #TaskEdit {
        color: #024382 !important;
        font-size: 15px;
        font-weight: bolder;
        background-color: #fff;
        padding: 5px;
        border-radius: 5px;
        margin-right: 5px;
        text-decoration: none;
    }

    #TaskDelete {
        color: darkred !important;
        font-size: 15px;
        font-weight: bolder;
        background-color: #fff;
        padding: 5px;
        border-radius: 5px;
        margin-left: 5px;
        text-decoration: none;
    }

    /*Styling for switch button*/
    input[type=checkbox] {
        display: none;
    }

    .DoneSwitchBtn {
        height: 26px;
        width: 50px;
        background: #ff6a00;
        position: relative;
        border-radius: 20px;
        box-shadow: inset 0 3px 10px rgba(0,0,0,0.3);
    }

        .DoneSwitchBtn:before {
            height: 23px;
            width: 23px;
            position: absolute;
            background: linear-gradient(#e0e0e0,#e6e6e6);
            left: 2px;
            top: 1.5px;
            content: '';
            transition: all 200ms;
            border-radius: 50%;
            box-shadow: 0 8px 6px -4px rgba(0,0,0,0.25);
        }

    input[type=checkbox]:checked + input[type="hidden"] + .DoneSwitchBtn:before {
        left: 25px;
    }

    input[type=checkbox]:checked + input[type="hidden"] + .DoneSwitchBtn {
        background: #028f5e;
    }

  


    .dataTables_wrapper .dataTables_length, .dataTables_wrapper .dataTables_filter,
    .dataTables_wrapper .dataTables_info, .dataTables_wrapper .dataTables_processing,
    .dataTables_wrapper .dataTables_paginate {
        color: white !important;
        /*#a5c2ef*/
    }

        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled, .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover, .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:active {
            color: white !important;
    
        }

  .sorting_1 {
        background-color: #024382 !important;
    }

    label {
        margin-bottom: 0px !important; 
    }
</style>

<h3>@ViewBag.ListName Tasks</h3>
@if (ViewBag.percentComplete >= 0)
{
    <div id="progressToDo">
        <br />
        <div class="progress">
            <div class="progress-bar" role="progressbar"
                 style="width:@(Html.AttributeEncode(ViewBag.percentComplete))%">
            </div>
        </div>
        <p>@(ViewBag.percentComplete)% Complete</p>
    </div>
}

@*This table displays a list of tasks*@
@*Used Razor to update the table from sql database*@
<table id="tblTaskList" class="display nowrap" style="width:100%">
    <thead>
        <tr>
            <th >
                @*@Html.DisplayNameFor(model => model.TaskPriority)*@
            </th>
            <th class="no-sort">
                @*@Html.DisplayNameFor(model => model.Desc)*@
            </th>
            <th class="no-sort">
                @*@Html.DisplayNameFor(model => model.Done)*@
            </th>
            <th class="no-sort">@*Task Description*@</th>
            <th class="no-sort">@*Is Done?*@</th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr style="background-color: rgb(256,256,256,0);">
                <td>
                    @item.TaskPriority
                </td>
                <td>
                    @if (!item.Done)
                    {
                        @Html.DisplayFor(modelItem => item.Desc)
                    }
                    else
                    {
                        <div class="strikeThrough">@Html.DisplayFor(modelItem => item.Desc)</div>
                    }
                </td>
                <td>
                    @String.Format("{0:MM/dd/yyyy}", item.DueDate)
                </td>
                <td>
                    <label class="DoneSwitch">
                        @Html.CheckBoxFor(modelItem => item.Done, new { id = item.Id, @class = "ActiveCheck" })
                        <div class="DoneSwitchBtn"></div>
                    </label>
                </td>
                <td id="TaskEditDeleteLinks">
                    <a class="glyphicon glyphicon-pencil" id="TaskEdit" title="Edit" onclick=TaskPopupEdit(@item.Id)></a>
                    <a class="glyphicon glyphicon-remove" id="TaskDelete" title="Delete" onclick=TaskPopupDelete(@item.Id)></a>
                </td>
            </tr>
        }
    </tbody>
</table>


<script src="~/CustomUnits/DoneEventListener.js"></script>

@*<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/rowreorder/1.2.3/js/dataTables.rowReorder.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/rowreorder/1.2.3/css/rowReorder.dataTables.min.css">*@

@*Load Jquery DataTables plugin along with its roe reorder feature*@
@*Row reorder is used to drag and drop rows to prioritize tasks in a list.*@
<script src="~/Scripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTables.rowReorder.min.js"></script>
@*<script src="~/Scripts/dataTables.responsive.min.js"></script>*@
<link rel="stylesheet" href="~/Content/jquery.dataTables.min.css">
<link rel="stylesheet" href="~/Content/rowReorder.dataTables.min.css">
@*<link rel="stylesheet" href="~/Content/responsive.dataTables.min.css" />*@

<script type="text/javascript">
    $(document).ready(function () {

        //Apply jQuery datatables plugin
       var table= $("#tblTaskList").DataTable({
           rowReorder: true,
           columnDefs: [{
               orderable: false,
               targets: "no-sort"
           }]
        });

        // Row reorder event is used to update task priorities in database
        // This event is fired for every row order change
       table.on('row-reorder', function (e, diff, edit) {
           for (var i = 0, ien = diff.length; i < ien; i++) {
               var rowData = table.row(diff[i].node).data();
               $.ajax({
                   type: "GET",
                   cache: false,
                   contentType: "application/json; charset=utf-8",
                   url: '/ToDoes/UpdateOrder',
                   data: { Id: rowData[0], fromPosition: diff[i].oldData, toPosition: diff[i].newData },
                   dataType: "json"
               });
           }
       });
    });
</script>